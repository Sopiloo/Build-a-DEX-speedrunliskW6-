{
  "address": "0x21857357a6C50516388300B06f8d3D74D9dd8d3E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "ItemCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ItemListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ItemSold",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "buyItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getListing",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ],
          "internalType": "struct NFTMarketplace.Listing",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "isListed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "listItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "listings",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftContract",
      "outputs": [
        {
          "internalType": "contract IERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xdba07889c561660a6eea684ad8e57af21227813b3fe82fedb4e9627183e45547",
  "receipt": {
    "to": null,
    "from": "0x2A1Bc0c9C69C8C460E531C859d0c503bB1274083",
    "contractAddress": "0x21857357a6C50516388300B06f8d3D74D9dd8d3E",
    "transactionIndex": 1,
    "gasUsed": "736717",
    "logsBloom": "0x
    "blockHash": "0xe4910590b491aab0a95f3be0d265c68d95007acdeb90c6d57262e52fc27a7250",
    "transactionHash": "0xdba07889c561660a6eea684ad8e57af21227813b3fe82fedb4e9627183e45547",
    "logs": [],
    "blockNumber": 27861682,
    "cumulativeGasUsed": "782813",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8cfb10f293F1Bbb9b6ef164aA9B6F6C2288D72Cc"
  ],
  "numDeployments": 1,
  "solcInputHash": "3ddadba6f2b608dda21b4f7df383cd30",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"ItemCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemSold\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getListing\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct NFTMarketplace.Listing\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Sellers keep NFTs until sold, marketplace only needs approval\",\"kind\":\"dev\",\"methods\":{},\"title\":\"NFTMarketplace\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple escrowless NFT marketplace for ERC721\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMarketplace.sol\":\"NFTMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/NFTMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title NFTMarketplace\\n * @notice Simple escrowless NFT marketplace for ERC721\\n * @dev Sellers keep NFTs until sold, marketplace only needs approval\\n */\\ncontract NFTMarketplace is ReentrancyGuard {\\n    struct Listing {\\n        address seller;\\n        uint256 price;\\n        bool isActive;\\n    }\\n\\n    IERC721 public immutable nftContract;\\n    mapping(uint256 => Listing) public listings;\\n\\n    event ItemListed(uint256 indexed tokenId, address indexed seller, uint256 price);\\n    event ItemSold(uint256 indexed tokenId, address indexed buyer, address indexed seller, uint256 price);\\n    event ItemCanceled(uint256 indexed tokenId, address indexed seller);\\n\\n    constructor(address _nftContract) {\\n        require(_nftContract != address(0), \\\"nft=0\\\");\\n        nftContract = IERC721(_nftContract);\\n    }\\n\\n    function listItem(uint256 tokenId, uint256 price) external {\\n        require(price > 0, \\\"price=0\\\");\\n        require(nftContract.ownerOf(tokenId) == msg.sender, \\\"not owner\\\");\\n        require(\\n            nftContract.getApproved(tokenId) == address(this) ||\\n                nftContract.isApprovedForAll(msg.sender, address(this)),\\n            \\\"not approved\\\"\\n        );\\n        require(!listings[tokenId].isActive, \\\"listed\\\");\\n\\n        listings[tokenId] = Listing({seller: msg.sender, price: price, isActive: true});\\n        emit ItemListed(tokenId, msg.sender, price);\\n    }\\n\\n    function buyItem(uint256 tokenId) external payable nonReentrant {\\n        Listing memory listing = listings[tokenId];\\n        require(listing.isActive, \\\"not listed\\\");\\n        require(msg.value >= listing.price, \\\"insufficient\\\");\\n        require(nftContract.ownerOf(tokenId) == listing.seller, \\\"owner changed\\\");\\n\\n        // mark sold first\\n        listings[tokenId].isActive = false;\\n\\n        // transfer NFT\\n        nftContract.safeTransferFrom(listing.seller, msg.sender, tokenId);\\n\\n        // pay seller\\n        (bool ok, ) = payable(listing.seller).call{value: listing.price}(\\\"\\\");\\n        require(ok, \\\"pay fail\\\");\\n\\n        // refund excess\\n        if (msg.value > listing.price) {\\n            (bool rOk, ) = payable(msg.sender).call{value: msg.value - listing.price}(\\\"\\\");\\n            require(rOk, \\\"refund fail\\\");\\n        }\\n\\n        emit ItemSold(tokenId, msg.sender, listing.seller, listing.price);\\n    }\\n\\n    function cancelListing(uint256 tokenId) external {\\n        Listing memory listing = listings[tokenId];\\n        require(listing.isActive, \\\"not listed\\\");\\n        require(listing.seller == msg.sender, \\\"not seller\\\");\\n        listings[tokenId].isActive = false;\\n        emit ItemCanceled(tokenId, msg.sender);\\n    }\\n\\n    function getListing(uint256 tokenId) external view returns (Listing memory) {\\n        return listings[tokenId];\\n    }\\n\\n    function isListed(uint256 tokenId) external view returns (bool) {\\n        return listings[tokenId].isActive;\\n    }\\n}\\n\",\"keccak256\":\"0x3151340d41ff76751622cee8be1d6e03b4391f0245e93ff52a1e9d7b390040bf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610ce2380380610ce283398101604081905261002f91610087565b60016000556001600160a01b0381166100765760405162461bcd60e51b815260206004820152600560248201526406e66743d360dc1b604482015260640160405180910390fd5b6001600160a01b03166080526100b7565b60006020828403121561009957600080fd5b81516001600160a01b03811681146100b057600080fd5b9392505050565b608051610bed6100f560003960008181610171015281816103d9015281816104a60152818161053c015281816107b601526108af0152610bed6000f3fe6080604052600436106100705760003560e01c8063d56d229d1161004e578063d56d229d1461015f578063de74e57b146101ab578063e7fb74c71461021c578063fcce48831461022f57600080fd5b8063107a274a14610075578063305a67a81461011d578063883efa671461013f575b600080fd5b34801561008157600080fd5b506100eb610090366004610b03565b6040805160608082018352600080835260208084018290529284018190529384526001808352938390208351918201845280546001600160a01b03168252938401549181019190915260029092015460ff1615159082015290565b6040805182516001600160a01b0316815260208084015190820152918101511515908201526060015b60405180910390f35b34801561012957600080fd5b5061013d610138366004610b03565b610272565b005b34801561014b57600080fd5b5061013d61015a366004610b1c565b61037f565b34801561016b57600080fd5b506101937f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610114565b3480156101b757600080fd5b506101f56101c6366004610b03565b60016020819052600091825260409091208054918101546002909101546001600160a01b039092169160ff1683565b604080516001600160a01b0390941684526020840192909252151590820152606001610114565b61013d61022a366004610b03565b6106cc565b34801561023b57600080fd5b5061026261024a366004610b03565b60009081526001602052604090206002015460ff1690565b6040519015158152602001610114565b600081815260016020818152604092839020835160608101855281546001600160a01b0316815292810154918301919091526002015460ff161515918101829052906102f25760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064015b60405180910390fd5b80516001600160a01b031633146103385760405162461bcd60e51b815260206004820152600a6024820152693737ba1039b2b63632b960b11b60448201526064016102e9565b600082815260016020526040808220600201805460ff1916905551339184917f5cb412c9620981e00377453c7d6131d2122a006cd48f53786863f87020c8b5699190a35050565b600081116103b95760405162461bcd60e51b8152602060048201526007602482015266070726963653d360cc1b60448201526064016102e9565b6040516331a9108f60e11b81526004810183905233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104449190610b3e565b6001600160a01b0316146104865760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016102e9565b60405163020604bf60e21b81526004810183905230906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063081812fc90602401602060405180830381865afa1580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190610b3e565b6001600160a01b031614806105af575060405163e985e9c560e01b81523360048201523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e985e9c590604401602060405180830381865afa15801561058b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105af9190610b6e565b6105ea5760405162461bcd60e51b815260206004820152600c60248201526b1b9bdd08185c1c1c9bdd995960a21b60448201526064016102e9565b60008281526001602052604090206002015460ff16156106355760405162461bcd60e51b81526020600482015260066024820152651b1a5cdd195960d21b60448201526064016102e9565b6040805160608101825233808252602080830185815260018486018181526000898152828552879020955186546001600160a01b0319166001600160a01b03909116178655915190850155516002909301805460ff191693151593909317909255915183815284917fc93edc6ee14cd6c0c2842099adfa8953b237dbdad304ba28e96dce8a7f2a828c910160405180910390a35050565b6106d4610aaa565b600081815260016020818152604092839020835160608101855281546001600160a01b0316815292810154918301919091526002015460ff1615159181018290529061074f5760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064016102e9565b80602001513410156107925760405162461bcd60e51b815260206004820152600c60248201526b1a5b9cdd59999a58da595b9d60a21b60448201526064016102e9565b80516040516331a9108f60e11b8152600481018490526001600160a01b03918216917f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa1580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108219190610b3e565b6001600160a01b0316146108675760405162461bcd60e51b815260206004820152600d60248201526c1bdddb995c8818da185b99d959609a1b60448201526064016102e9565b60008281526001602052604090819020600201805460ff1916905581519051632142170760e11b81526001600160a01b039182166004820152336024820152604481018490527f0000000000000000000000000000000000000000000000000000000000000000909116906342842e0e90606401600060405180830381600087803b1580156108f557600080fd5b505af1158015610909573d6000803e3d6000fd5b50505050600081600001516001600160a01b0316826020015160405160006040518083038185875af1925050503d8060008114610962576040519150601f19603f3d011682016040523d82523d6000602084013e610967565b606091505b50509050806109a35760405162461bcd60e51b81526020600482015260086024820152671c185e4819985a5b60c21b60448201526064016102e9565b8160200151341115610a4557602082015160009033906109c39034610b90565b604051600081818185875af1925050503d80600081146109ff576040519150601f19603f3d011682016040523d82523d6000602084013e610a04565b606091505b5050905080610a435760405162461bcd60e51b815260206004820152600b60248201526a1c99599d5b990819985a5b60aa1b60448201526064016102e9565b505b81600001516001600160a01b0316336001600160a01b0316847f04ddd54c6b746e69ba87f862311f7670bd1d7276846778ac81cd38747b27a7468560200151604051610a9391815260200190565b60405180910390a45050610aa76001600055565b50565b600260005403610afc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102e9565b6002600055565b600060208284031215610b1557600080fd5b5035919050565b60008060408385031215610b2f57600080fd5b50508035926020909101359150565b600060208284031215610b5057600080fd5b81516001600160a01b0381168114610b6757600080fd5b9392505050565b600060208284031215610b8057600080fd5b81518015158114610b6757600080fd5b81810381811115610bb157634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212202b508e34a4e27b98df013bbc5dfa11e1700a47a7b71c3c442c66531c31fc4f7464736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063d56d229d1161004e578063d56d229d1461015f578063de74e57b146101ab578063e7fb74c71461021c578063fcce48831461022f57600080fd5b8063107a274a14610075578063305a67a81461011d578063883efa671461013f575b600080fd5b34801561008157600080fd5b506100eb610090366004610b03565b6040805160608082018352600080835260208084018290529284018190529384526001808352938390208351918201845280546001600160a01b03168252938401549181019190915260029092015460ff1615159082015290565b6040805182516001600160a01b0316815260208084015190820152918101511515908201526060015b60405180910390f35b34801561012957600080fd5b5061013d610138366004610b03565b610272565b005b34801561014b57600080fd5b5061013d61015a366004610b1c565b61037f565b34801561016b57600080fd5b506101937f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610114565b3480156101b757600080fd5b506101f56101c6366004610b03565b60016020819052600091825260409091208054918101546002909101546001600160a01b039092169160ff1683565b604080516001600160a01b0390941684526020840192909252151590820152606001610114565b61013d61022a366004610b03565b6106cc565b34801561023b57600080fd5b5061026261024a366004610b03565b60009081526001602052604090206002015460ff1690565b6040519015158152602001610114565b600081815260016020818152604092839020835160608101855281546001600160a01b0316815292810154918301919091526002015460ff161515918101829052906102f25760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064015b60405180910390fd5b80516001600160a01b031633146103385760405162461bcd60e51b815260206004820152600a6024820152693737ba1039b2b63632b960b11b60448201526064016102e9565b600082815260016020526040808220600201805460ff1916905551339184917f5cb412c9620981e00377453c7d6131d2122a006cd48f53786863f87020c8b5699190a35050565b600081116103b95760405162461bcd60e51b8152602060048201526007602482015266070726963653d360cc1b60448201526064016102e9565b6040516331a9108f60e11b81526004810183905233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104449190610b3e565b6001600160a01b0316146104865760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016102e9565b60405163020604bf60e21b81526004810183905230906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063081812fc90602401602060405180830381865afa1580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190610b3e565b6001600160a01b031614806105af575060405163e985e9c560e01b81523360048201523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e985e9c590604401602060405180830381865afa15801561058b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105af9190610b6e565b6105ea5760405162461bcd60e51b815260206004820152600c60248201526b1b9bdd08185c1c1c9bdd995960a21b60448201526064016102e9565b60008281526001602052604090206002015460ff16156106355760405162461bcd60e51b81526020600482015260066024820152651b1a5cdd195960d21b60448201526064016102e9565b6040805160608101825233808252602080830185815260018486018181526000898152828552879020955186546001600160a01b0319166001600160a01b03909116178655915190850155516002909301805460ff191693151593909317909255915183815284917fc93edc6ee14cd6c0c2842099adfa8953b237dbdad304ba28e96dce8a7f2a828c910160405180910390a35050565b6106d4610aaa565b600081815260016020818152604092839020835160608101855281546001600160a01b0316815292810154918301919091526002015460ff1615159181018290529061074f5760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081b1a5cdd195960b21b60448201526064016102e9565b80602001513410156107925760405162461bcd60e51b815260206004820152600c60248201526b1a5b9cdd59999a58da595b9d60a21b60448201526064016102e9565b80516040516331a9108f60e11b8152600481018490526001600160a01b03918216917f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa1580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108219190610b3e565b6001600160a01b0316146108675760405162461bcd60e51b815260206004820152600d60248201526c1bdddb995c8818da185b99d959609a1b60448201526064016102e9565b60008281526001602052604090819020600201805460ff1916905581519051632142170760e11b81526001600160a01b039182166004820152336024820152604481018490527f0000000000000000000000000000000000000000000000000000000000000000909116906342842e0e90606401600060405180830381600087803b1580156108f557600080fd5b505af1158015610909573d6000803e3d6000fd5b50505050600081600001516001600160a01b0316826020015160405160006040518083038185875af1925050503d8060008114610962576040519150601f19603f3d011682016040523d82523d6000602084013e610967565b606091505b50509050806109a35760405162461bcd60e51b81526020600482015260086024820152671c185e4819985a5b60c21b60448201526064016102e9565b8160200151341115610a4557602082015160009033906109c39034610b90565b604051600081818185875af1925050503d80600081146109ff576040519150601f19603f3d011682016040523d82523d6000602084013e610a04565b606091505b5050905080610a435760405162461bcd60e51b815260206004820152600b60248201526a1c99599d5b990819985a5b60aa1b60448201526064016102e9565b505b81600001516001600160a01b0316336001600160a01b0316847f04ddd54c6b746e69ba87f862311f7670bd1d7276846778ac81cd38747b27a7468560200151604051610a9391815260200190565b60405180910390a45050610aa76001600055565b50565b600260005403610afc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102e9565b6002600055565b600060208284031215610b1557600080fd5b5035919050565b60008060408385031215610b2f57600080fd5b50508035926020909101359150565b600060208284031215610b5057600080fd5b81516001600160a01b0381168114610b6757600080fd5b9392505050565b600060208284031215610b8057600080fd5b81518015158114610b6757600080fd5b81810381811115610bb157634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212202b508e34a4e27b98df013bbc5dfa11e1700a47a7b71c3c442c66531c31fc4f7464736f6c63430008110033",
  "devdoc": {
    "details": "Sellers keep NFTs until sold, marketplace only needs approval",
    "kind": "dev",
    "methods": {},
    "title": "NFTMarketplace",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Simple escrowless NFT marketplace for ERC721",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 4325,
        "contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
        "label": "listings",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Listing)4317_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(Listing)4317_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NFTMarketplace.Listing)",
        "numberOfBytes": "32",
        "value": "t_struct(Listing)4317_storage"
      },
      "t_struct(Listing)4317_storage": {
        "encoding": "inplace",
        "label": "struct NFTMarketplace.Listing",
        "members": [
          {
            "astId": 4312,
            "contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
            "label": "seller",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4314,
            "contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 4316,
            "contract": "contracts/NFTMarketplace.sol:NFTMarketplace",
            "label": "isActive",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}